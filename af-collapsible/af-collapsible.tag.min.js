riot.tag2("af-collapsible",'<ul><li each="{header, i in headers}" class="{is-active : (header.isOpen && header.children) || (header.isFocused && !header.children) , is-focused : header.isFocused}"><af-raw class="{header : true}" text="{header.title}" onclick="{parent.toggleHeader}"></af-raw><af-button class="headeraction" if="{header.action}" buttontext="{header.action}" bus="{parent.opts.bus}" header="{header}"></af-button><af-raw class="body" text="{header.body}" payload="{header}" if="{header.body && header.isOpen}"></af-raw><af-collapsible class="body" headers="{header.children}" if="{header.children}" bus="{parent.opts.bus}" multiple="{parent.opts.multiple}"></af-collapsible></li></ul>',"","",function(e){var a=this;if(a.headers=e.headers,!a.opts.multiple)for(var r=0,s=a.headers.length;r<s;++r)if(a.headers[r].isOpen){a.current=a.headers[r];break}this.toggleHeader=function(e){a.opts.multiple||(a.current&&a.current!==e.item.header&&(a.current.isOpen=!1,a.current.isFocused=!1),a.current=e.item.header),e.item.header.isOpen=!e.item.header.isOpen,e.item.header.isFocused=!0,a.opts.bus&&a.opts.bus.trigger("headerchanged",e.item.header)},e.bus&&e.bus.on("headerchanged",function(e){for(var r,s=0,t=a.headers.length;s<t;++s)if(r=a.headers[s],r.isFocused&&r!=e){a.headers[s].isFocused=!1,a.update();break}}),e.rootbus&&e.rootbus.on("headersupdated",function(e){a.headers=e,a.update()})});